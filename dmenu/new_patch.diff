diff -up dmenu-4.0//dmenu.1 dmenu-4.0new//dmenu.1
--- dmenu-4.0//dmenu.1	2009-04-18 13:50:04.000000000 +0200
+++ dmenu-4.0new//dmenu.1	2010-04-21 20:30:40.714156896 +0200
@@ -11,6 +11,7 @@ dmenu \- dynamic menu
 .RB [ \-p " <prompt>"]
 .RB [ \-sb " <color>"]
 .RB [ \-sf " <color>"]
+.RB [ \-hist " <filename>"]
 .RB [ \-v ]
 .SH DESCRIPTION
 .SS Overview
diff -up dmenu-4.0//dmenu.c dmenu-4.0new//dmenu.c
--- dmenu-4.0//dmenu.c	2009-04-18 13:50:04.000000000 +0200
+++ dmenu-4.0new//dmenu.c	2010-04-21 20:39:55.947819187 +0200
@@ -19,6 +19,8 @@
 #define INRECT(X,Y,RX,RY,RW,RH) ((X) >= (RX) && (X) < (RX) + (RW) && (Y) >= (RY) && (Y) < (RY) + (RH))
 #define MIN(a, b)               ((a) < (b) ? (a) : (b))
 
+#define HIST_SIZE 20
+
 /* enums */
 enum { ColFG, ColBG, ColLast };
 
@@ -100,6 +102,52 @@ appenditem(Item *i, Item **list, Item **
 	*last = i;
 }
 
+static char hist[HIST_SIZE][1024];
+static char *histfile = NULL;
+static int hcnt = 0;
+
+static int
+writehistory(char *command) {
+   int i = 0, j = hcnt;
+   FILE *f;
+
+   if(!histfile || strlen(command) <= 0)
+      return 0;
+
+   if( (f = fopen(histfile, "w")) ) {
+      fputs(command, f);
+         fputc('\n', f);
+      for(; i<HIST_SIZE && i<j; i++) {
+         if(strcmp(command, hist[i]) != 0) {
+            fputs(hist[i], f);
+            fputc('\n', f);
+         }
+      }
+      fclose(f);
+      return 1;
+   }
+
+   return 0;
+}
+
+static int
+readhistory (void) {
+   char buf[1024];
+   FILE *f;
+
+
+   if(!histfile)
+      return 0;
+
+   if( (f = fopen(histfile, "r+")) ) {
+      while(fgets(buf, sizeof buf, f) && (hcnt < HIST_SIZE))  
+         strncpy(hist[hcnt++], buf, (strlen(buf) <= 1024) ? strlen(buf): 1024 );
+      fclose(f);
+   }
+
+   return hcnt;
+}
+
 void
 calcoffsets(void) {
 	int tw;
@@ -206,7 +254,7 @@ drawmenu(void) {
 		dc.x = mw - spaceitem;
 		dc.w = spaceitem;
 		drawtext(next ? ">" : NULL, dc.norm);
-	}
+	} 
 	XCopyArea(dpy, dc.drawable, win, dc.gc, 0, 0, mw, mh, 0, 0);
 	XFlush(dpy);
 }
@@ -453,6 +501,7 @@ kpress(XKeyEvent * e) {
 			fprintf(stdout, "%s", sel->text);
 		else if(*text)
 			fprintf(stdout, "%s", text);
+		writehistory( (sel == NULL) ? text : sel->text);
 		fflush(stdout);
 		running = False;
 		break;
@@ -521,8 +570,34 @@ readstdin(void) {
 	char *p, buf[1024];
 	unsigned int len = 0, max = 0;
 	Item *i, *new;
-
+	int k;
+	
 	i = 0;
+
+	if( readhistory() )  {
+		for(k=0; k<hcnt; k++) {
+			len = strlen(hist[k]);
+			if (hist[k][len - 1] == '\n')
+				hist[k][len - 1] = 0;
+			p = strdup(hist[k]);
+			if(max < len) {
+				maxname = p;
+				max = len;
+			}
+			if(!(new = (Item *)malloc(sizeof(Item))))
+				eprint("fatal: could not malloc() %u bytes\n", sizeof(Item));
+			new->next = new->left = new->right = NULL;
+			new->text = p;
+			if(!i)
+				allitems = new;
+			else 
+				i->next = new;
+			i = new;
+		}
+	}
+	len=0; max=0;
+
+
 	while(fgets(buf, sizeof buf, stdin)) {
 		len = strlen(buf);
 		if (buf[len - 1] == '\n')
@@ -685,6 +760,9 @@ main(int argc, char *argv[]) {
 		else if(!strcmp(argv[i], "-nf")) {
 			if(++i < argc) normfgcolor = argv[i];
 		}
+		else if(!strcmp(argv[i], "-hist")) {
+			if(++i < argc) histfile = argv[i];
+		}
 		else if(!strcmp(argv[i], "-p")) {
 			if(++i < argc) prompt = argv[i];
 		}
@@ -698,7 +776,7 @@ main(int argc, char *argv[]) {
 			eprint("dmenu-"VERSION", Â© 2006-2008 dmenu engineers, see LICENSE for details\n");
 		else
 			eprint("usage: dmenu [-i] [-b] [-fn <font>] [-nb <color>] [-nf <color>]\n"
-			       "             [-p <prompt>] [-sb <color>] [-sf <color>] [-v]\n");
+			       "             [-p <prompt>] [-hist <file>] [-sb <color>] [-sf <color>] [-v]\n");
 	if(!setlocale(LC_CTYPE, "") || !XSupportsLocale())
 		fprintf(stderr, "warning: no locale support\n");
 	if(!(dpy = XOpenDisplay(NULL)))
