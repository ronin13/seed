#
# /etc/makepkg.conf
#

#########################################################################
# SOURCE ACQUISITION
#########################################################################
#
#-- The download utilities that makepkg should use to acquire sources
#  Format: 'protocol::agent'
DLAGENTS=('ftp::/usr/bin/wget -c --passive-ftp -t 3 --waitretry=3 -O %o %u'
          'http::/usr/bin/wget -c -t 3 --waitretry=3 -O %o %u'
          'https::/usr/bin/wget -c -t 3 --waitretry=3 --no-check-certificate -O %o %u'
          'rsync::/usr/bin/rsync -z %u %o'
          'scp::/usr/bin/scp -C %u %o')

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/curl

#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################
#
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"        #unknown to pc

# http://en.gentoo-wiki.com/wiki/Safe_Cflags/AMD#Turion64_.2F_X2_.2F_Ultra
#-- Exclusive: will only run on -march=x86-64 
# -march (or -mcpu) builds exclusively for an architecture
# -mtune optimizes for an architecture, but builds for whole processor family
#-finline-functions

#lwn http://lwn.net/Articles/386537/
#-fexcess-precision=fast

#-fpeel-loops"         #added -mtune=native
CFLAGS="-march=k8 -msse3 -O2 -flto -pipe -ffast-math -ftracer  -funswitch-loops -fexcess-precision=fast" 
#CFLAGS="-march=k8 -msse3 -O2  -pipe -ffast-math -ftracer  -funswitch-loops" 
#CXXFLAGS=${CFLAGS}
#CXXFLAGS="-march=k8 -msse3 -O2  -pipe -ffast-math -ftracer -funswitch-loops"
CXXFLAGS="-march=k8 -msse3 -O2 -flto  -pipe -ffast-math -ftracer -funswitch-loops -fexcess-precision=fast"
# -fpeel-loops"
#-floop-interchange -floop-strip-mine -floop-block
#-- Make Flags: change this for DistCC/SMP systems
MAKEFLAGS="-j3"        # change commented to j3
LDFLAGS="-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu"   #http://bbs.archlinux.org/viewtopic.php?id=70504     http://bbs.archlinux.org/viewtopic.php?id=72267
# removed -Wl, -O1


#########################################################################
# BUILD ENVIRONMENT
#########################################################################
#
# Defaults: BUILDENV=(fakeroot !distcc color !ccache !xdelta)
#  A negated environment option will do the opposite of the comments below.
#
#-- fakeroot: Allow building packages as a non-root user
#-- distcc:   Use the Distributed C/C++/ObjC compiler
#-- color:    Colorize output messages
#-- ccache:   Use ccache to cache compilation
#-- xdelta:   Generate delta patch from previous to current package
#
BUILDENV=(fakeroot !distcc color !ccache)
#
#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""

#########################################################################
# GLOBAL PACKAGE OPTIONS
#   These are default values for the options=() settings
#########################################################################
#
# Default: OPTIONS=(strip docs libtool emptydirs zipman)
#  A negated option will do the opposite of the comments below.
#
#-- strip:     Strip symbols from binaries/libraries
#-- docs:      Save doc and info directories
#-- libtool:   Leave libtool (.la) files in packages
#-- emptydirs: Leave empty directories in packages
#-- zipman:    Compress manpages with gzip
#
OPTIONS=(strip docs libtool emptydirs zipman purge)

#-- File integrity checks to use. Valid: md5, sha1, sha256, sha384, sha512
INTEGRITY_CHECK=(md5)
#-- Info and doc directories to remove (if option set correctly above)
#-- Directories to be searched for the strip option (if option set correctly above)
STRIP_DIRS=(bin lib sbin usr/{bin,lib,sbin,local/{bin,lib,sbin}} opt/*/{bin,lib,sbin})
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
#########################################################################
# PACKAGE OUTPUT
#########################################################################
#
# Default: put built package and cached source in build directory
#
#-- Destination: specify a fixed directory where all packages will be placed
#PKGDEST=/home/packages
#-- Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
#-- Packager: name/email of the person or organization building packages
PACKAGER="Raghavendra D Prabhu <raghuDOTprabhu13ATgmaildOtcom>"

#########################################################################
# BUILDSCRIPT/EXTENSION DEFAULTS
#########################################################################
#
# WARNING: Do NOT modify these variables unless you know what you are
#          doing.
#
#BUILDSCRIPT='PKGBUILD'
PKGEXT='.pkg.tar.xz'
SRCEXT='.src.tar.gz'
#DB_COMPRESSION='gz'
#DB_CHECKSUMS=(md5)

# vim: set ft=sh ts=2 sw=2 et:
